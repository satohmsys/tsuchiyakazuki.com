@import "functions";
//////////////////////////////////////////

//mixin

//include by style.scss

//////////////////////////////////////////



///トランジション
// @param @content CSS properties
//
@mixin mouseOver(){
	&:hover , &:active , &:focus{
		@content;
	}
}

///リキッドレイアウト幅
// @param @width
//
@mixin liquid( 
	$width: 100 ,
	$parentWidth: 1000,
	$centering: true ){
	width: percentage( $width / $parentWidth );
	
	@if( $centering == true ){
		margin-left: auto;
		margin-right: auto;
	}
}



///クリアフィックス
// 
// 
@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}


///iconfont (icomoon
//
// 
// @param $content fonwawesomeのコード
// @param $margin-right 右マージン
// @param $color 文字色
// @param $font-size 文字サイズ
// @param $top 上からの位置
// @param $left 左からの位置
// @param $dir 文字の右につくか左につくか
// 
@mixin iconfont(
        $content ,
        $icon-margin-right: 3px,
        $color : inherit ,
        $font-size : 1em ,
        $top : -2px ,
        $left : 0 ,
        $dir : left    ){
        @if($dir == right){
            &:after{
                content: $content;
                line-height: 1;
                margin-left: $icon-margin-right;
                display: inline-block;
                position: relative;
                top : $top; 
                right: $left;                    
                transform: translate(0, 0);    
                vertical-align: middle;
                font-family: fontAwesome;
                font-style: normal;
				font-weight: normal;
				font-variant: normal;
				text-transform: none;
                font-size: $font-size;
                text-rendering: auto;
                color : $color;
				-webkit-font-smoothing: antialiased;
				-moz-osx-font-smoothing: grayscale;                
            }
            html.ie8 &:after {
                content: ">";
                font-family: inherit;
            }                

        }@else{

            &:before{
              content: $content;
              line-height: 1;
              margin-right: $icon-margin-right;
              display: inline-block;
              position: relative;
              top : $top; 
              left: $left;                    
              transform: translate(0, 0);    
              vertical-align: middle;
              font-family: fontawesome;
              font-style: normal;
							font-weight: normal;
							font-variant: normal;
							text-transform: none;                
              font-size: $font-size;
              text-rendering: auto;
              color : $color;
							-webkit-font-smoothing: antialiased;
							-moz-osx-font-smoothing: grayscale;
            }
            html.ie8 &:before{
                content: ">";
                font-family: inherit;
            }
        }
}



//////////ブレークポイント
// @param $mediaSize	デバイス種類 sp tab pc
// @param $minMax		min / max
// 
@mixin mq(
	$mediaSize ,
	$minMax : max ,
	$heightOrWidth : width){

	@if( $heightOrWidth == width ){
	///////// 幅でブレイク

		////数値でブレークポイントを指定した場合
		@if( type-of($mediaSize) == number){
			@media screen and ( $minMax + '-' + $heightOrWidth + ': ' +  $mediaSize + 'px'){
				@content;				
			}			
		} @else {
		////'pc' , 'tab' , 'sp'
			////smartphone
			@if($mediaSize == sp){
				@include breakpointChanger(
					$bpSmpMin-width,
					$bpSmpMax-width,
					$minMax,
					width
				){
					@content;
				}					
			}

			////tablet
			@if($mediaSize == tab){
				@include breakpointChanger(
					$bpTabMin-width,
					$bpTabMax-width,
					$minMax,
					width
				){
					@content;
				}	
			}

			////pc
			@if($mediaSize == pc){
				@include breakpointChanger(
					$bpPcMin-width,
					$bpPcMax-width,
					$minMax,
					width
				){
					@content;
				}		
			}
		}
		
	} @else {
		///////// 高さでブレイク
		
		////数値でブレークポイントを指定した場合 
		@if( type-of($mediaSize) == number){
			@media screen and ( $minMax + '-' + $heightOrWidth + ': ' +  $mediaSize + 'px'){
				@content;				
			}			
		} @else {
			////'pc' , 'tab' , 'sp'
			////smartphone
			@if($mediaSize == sp){
				@include breakpointChanger(
					$bpSmpMin-height,
					$bpSmpMax-height,
					$minMax,
					height
				){
					@content;
				}					
			}

			////tablet
			@if($mediaSize == tab){
				@include breakpointChanger(
					$bpTabMin-height,
					$bpTabMax-height,
					$minMax,
					height
				){
					@content;
				}	
			}

			////pc
			@if($mediaSize == pc){
				@include breakpointChanger(
					$bpPcMin-height,
					$bpPcMax-height,
					$minMax,
					height
				){
					@content;
				}		
			}
		}		
	}	
}


//////////min-width(height) / max-width(height) 振り分ける
// @param $mediaSize-min	min-width(height)
// @param $mediaSize-max 	max-width(height)
// @param $mediaSize		デバイス種類 sp tab pc / サイズ数値( px不要 )　
// @param $minMax			min / max
// 
@mixin breakpointChanger(
		$mediaSize-min,
		$mediaSize-max,
		$minMax,
		$heightOrWidth: width
	){

	@if( $heightOrWidth == width ){	
		
		@if($minMax == min){//min-width
			@media screen and ( $mediaSize-min ){
				@content;
			}
		}
		@if($minMax == max){//max-width
			@media screen and ( $mediaSize-max ){
				@content;
			}
		}
	} @else {

		@if($minMax == min){//min-width
			@media screen and ( $mediaSize-min ){
				@content;
			}
		}
		@if($minMax == max){//max-width
			@media screen and ( $mediaSize-max ){
				@content;
			}
		}

	}	
}
